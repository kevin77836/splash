{"file":"index.vue.mjs","mappings":";;;;;;;;;AAoFI,SAAK,eAAe,aAAa;AAE3B,UAAA,YAAY,IAAI,IAAI;AACpB,UAAA,eAAe,IAAI,KAAK;AACxB,UAAA,eAAe,IAAI,MAAM;AACzB,UAAA,gBAAgB,IAAI,KAAK;AACzB,UAAA,YAAY,IAAI,KAAK;AAI3B,UAAM,kBAAkB,MAAM;AAC1B,UAAI,UAAU,OAAO;AACrB,kBAAU,MAAM,sBAAsB;AAAA,MAAA;AAAA,IAE1C;AAEA,UAAM,oBAAoB,MAAM;AAC5B,UAAI,UAAU,OAAO;AACrB,kBAAU,MAAM,wBAAwB;AAAA,MAAA;AAAA,IAE5C;AAGA,UAAM,wBAAwB,MAAM;AAChC,mBAAa,QAAQ;AAAA,IACzB;AAGM,UAAA,oBAAoB,CAAC,UAAU;AACjC,mBAAa,QAAQ;AAAA,IACzB;AAGM,UAAA,0BAA0B,CAAC,kBAAkB;AAC3C,UAAA,CAAC,cAAc,MAAO;AAE1B,UAAI,kBAAkB,WAAW;AAEjB,mBAAW,MAAM;AACX,4BAAA;AAAA,WACnB,GAAI;AAAA,MAAA,WACI,kBAAkB,aAAa;AAE1B,mBAAW,MAAM;AACb,0BAAA;AAAA,WACjB,GAAI;AAAA,MAAA;AAAA,IAEX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/index.vue"],"sourcesContent":["<template>\n    <div class=\"main-container\">\n        <div class=\"main-section\">\n            <div v-if=\"loadComplete && !isStarted\" class=\"startButton\" @click=\"clickStart\">\n                Start\n            </div>\n      \n            <h1 :class=\"{'start': isStarted}\" class=\"company-name\">\n            <span class=\"front-name\">\n            Splash\n            </span>\n            <span class=\"back-name\">\n            DigiLab\n                </span>\n            </h1>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section2\">\n            <h2>section2</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section3\">\n            <h2>section3</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section4\">\n            <h2>section4</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section5\">\n            <h2>section5</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section6\">\n            <h2>section6</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section7\">\n            <h2>section7</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section8\">\n            <h2>section8</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section9\">\n            <h2>section9</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section10\">\n            <h2>section10</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section11\">\n            <h2>section11</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section12\">\n            <h2>section12</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section13\">\n            <h2>section13</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section14\">\n            <h2>section14</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section15\">\n            <h2>section15</h2>\n        </div>\n        <div v-if=\"isStarted\" class=\"section section16\">\n            <h2>section16</h2>\n        </div>\n    </div>\n    <Splash\n    ref=\"splashRef\" \n    :isStarted=\"isStarted\"\n    @resourcesLoaded=\"handleResourcesLoaded\"\n    @stateChange=\"handleStateChange\"\n    @animationComplete=\"handleAnimationComplete\"\n    />\n        <!-- <div class=\"button-group\">\n        <button @click=\"growingFunction\">開始生長</button>\n        <button @click=\"shrinkingFunction\">開始收合</button>\n        <button @click=\"startAutoPlay\">開始自動播放</button>\n        <button @click=\"stopAutoPlay\">停止自動播放</button>\n        <div class=\"status\">狀態: {{ currentState }}</div>\n        <div class=\"status\">資源狀態: {{ loadComplete ? '已載入' : '載入中' }}</div>\n        <div class=\"status\">自動播放: {{ isAutoPlaying ? '進行中' : '停止' }}</div>\n        </div> -->\n</template>\n<script setup>\n    import gsap from 'gsap';\n    import { ScrollTrigger } from 'gsap/ScrollTrigger';\n    \n    // 註冊 ScrollTrigger 插件\n    gsap.registerPlugin(ScrollTrigger);\n    \n    const splashRef = ref(null);\n    const loadComplete = ref(false);\n    const currentState = ref('idle');\n    const isAutoPlaying = ref(false);\n    const isStarted = ref(false);\n    let autoPlayTimer = null;\n    \n    // 基本動畫控制函數\n    const growingFunction = () => {\n        if (splashRef.value) {\n        splashRef.value.startGrowingAnimation();\n        }\n    }\n    \n    const shrinkingFunction = () => {\n        if (splashRef.value) {\n        splashRef.value.startShrinkingAnimation();\n        }\n    }\n    \n    // 處理資源載入完成事件\n    const handleResourcesLoaded = () => {\n        loadComplete.value = true;\n    }\n    \n    // 處理狀態變化\n    const handleStateChange = (state) => {\n        currentState.value = state;\n    }\n    \n    // 處理動畫完成事件\n    const handleAnimationComplete = (animationType) => {\n        if (!isAutoPlaying.value) return;\n        \n        if (animationType === 'growing') {\n        // 生長動畫完成，等待1秒後開始收縮\n        autoPlayTimer = setTimeout(() => {\n            shrinkingFunction();\n        }, 1000);\n        } else if (animationType === 'shrinking') {\n        // 收縮動畫完成，等待2秒後開始生長\n        autoPlayTimer = setTimeout(() => {\n            growingFunction();\n        }, 2000);\n        }\n    }\n    \n    const clickStart = () => {\n        isStarted.value = true;\n        startAutoPlay();\n        splashRef.value.addMouseControlEvents();\n        \n        // 設置滾動動畫\n        setupScrollAnimations();\n        \n        // 啟用頁面滾動\n        document.body.style.overflow = 'auto';\n    }\n    \n    // 開始自動播放\n    const startAutoPlay = () => {\n        if (isAutoPlaying.value) return; // 如果已經在播放則不執行\n        isAutoPlaying.value = true;\n        \n        // 從生長動畫開始\n        growingFunction();\n    }\n    \n    // 停止自動播放\n    const stopAutoPlay = () => {\n        isAutoPlaying.value = false;\n        \n        // 清除任何待執行的定時器\n        if (autoPlayTimer) {\n            clearTimeout(autoPlayTimer);\n            autoPlayTimer = null;\n        }\n        \n        // 執行收合動畫，使其回到起點\n        shrinkingFunction();\n    }\n    \n    onMounted(() => {\n        document.body.style.overflow = 'hidden';\n    });\n    // 組件卸載時清理\n    onUnmounted(() => {\n        if (autoPlayTimer) {\n            clearTimeout(autoPlayTimer);\n        }\n        isAutoPlaying.value = false;\n        \n        // 清理所有 ScrollTrigger 實例\n        ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n    });\n</script>"],"version":3}