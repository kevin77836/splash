import{r as v,H as Ie,o as Ue,I as qe,t as Ae,x as t,J as x,B as w,y as h,K as s,L as _,M as L,v as Ne}from"./iXxArwze.js";import{S as Ve,C as te,P as We,W as Fe,O as De,A as ze,D as Be,a as Qe,M as pe,b as Ge,c as Oe,d as $e,e as ve,V as He,E as je,f as Je,g as ne,h as ie,Q as Xe,i as Ke}from"./GFrmpgK8.js";import{G as Ye}from"./CIfMxH_z.js";import{E as Ze,R as et,O as tt}from"./00I9isl8.js";const nt={class:"splash-container"},ot={id:"thickToThinPanel",class:"control-panel thick-to-thin-panel"},lt={class:"control-group"},at={class:"control-label"},it={class:"value-display"},st={class:"control-group"},rt={class:"control-label"},ut={class:"value-display"},dt={class:"control-group"},ct={class:"control-label"},pt={class:"value-display"},vt={class:"control-group"},mt={class:"control-label"},gt={class:"value-display"},ft={class:"control-group"},ht={class:"control-label"},yt={class:"value-display"},bt={class:"control-group"},xt={class:"control-label"},wt={class:"value-display"},_t={id:"thinToThickPanel",class:"control-panel thin-to-thick-panel"},Lt={class:"control-group"},St={class:"control-label"},Mt={class:"value-display"},Tt={class:"control-group"},Rt={class:"control-label"},kt={class:"value-display"},Ct={class:"control-group"},Et={class:"control-label"},Pt={class:"value-display"},It={class:"control-group"},Ut={class:"control-label"},qt={class:"value-display"},At={class:"control-group"},Nt={class:"control-label"},Vt={class:"value-display"},Wt={class:"control-group"},Ft={class:"control-label"},Dt={class:"value-display"},zt={id:"commonPanel",class:"control-panel common-panel"},Bt={id:"switchPanel",class:"control-panel switch-panel"},Qt={class:"switch-control-group"},Gt={class:"switch-label"},Ot={class:"switch"},$t=["checked"],Ht={class:"switch-control-group"},jt={class:"switch-label"},Jt={class:"switch"},Xt=["checked"],Kt={class:"switch-control-group"},Yt={class:"switch-label"},Zt={class:"switch"},en=["checked"],me=50,tn=20,nn=`
    uniform vec3 viewVector;
    uniform vec2 uResolution;
    uniform float uTime;
    varying vec2 vUv;
    varying float opacity;
    void main() {
      vUv = uv;
      vec4 mvPos = modelViewMatrix * vec4(position, 1.0);
      gl_Position = projectionMatrix * mvPos;
      vec3 nNormal = normalize(normalMatrix * normal);
      vec3 nView   = normalize(viewVector - mvPos.xyz);
      opacity = dot(nNormal, nView);
      opacity = 1.0 - abs(opacity * 1.3);
    }
  `,on=`
    uniform vec3 uColor;
    uniform vec2 uResolution;
    uniform float uTime;
    varying vec2 vUv;
    varying float opacity;
    void main() {
      vec2 d = gl_FragCoord.xy / uResolution;
      vec3 fade = vec3(d.x, d.y, 1.0);
      vec3 c = mix(vec3(0.0), fade * uColor, opacity);
      gl_FragColor = vec4(c, 1.0);
    }
  `,cn={__name:"generate",setup(ln){const z=v(null),X=v(null),S=v(.1),M=v(.01),T=v(2.5),R=v(3.5),B=v(.25),A=v(4),k=v(.01),C=v(.1),E=v(2),P=v(3),Q=v(1.25),N=v(3),I=v(200),U=v("shader"),G=v(!1),O=v(!1);let r,u,g,m,l,V,p,K,$,se,re,H=[],y=[],F=[],j=[];function ge(){return{shader:new $e({uniforms:{uResolution:{value:new He(window.innerWidth,window.innerHeight)},uTime:{value:0},uColor:{value:new te(0)},viewVector:{value:u.position}},vertexShader:nn,fragmentShader:on,transparent:!0,side:ve}),liquid:new Oe({color:16777215,metalness:.9,roughness:0,transparent:!0,opacity:.25,side:ve,envMap:null})}}function fe(){new je().setPath("/hdr/").load("HDR_Light_Studio_Free_HDRI_Design_04.exr",a=>{a.mapping=Je;const e=K.fromEquirectangular(a).texture;K.dispose(),a.dispose(),console.log("本地 EXR 環境貼圖已載入並處理完成。"),r.environment=e,p&&p.liquid&&(p.liquid.envMap=e,p.liquid.needsUpdate=!0)},void 0,a=>{console.error("無法載入本地 EXR 環境貼圖:",a),alert("無法載入 assets/hdr/HDR_Light_Studio_Free_HDRI_Design_05.exr，請檢查檔案是否存在或路徑是否正確。")})}function Z(){var c,i;if(!V||!l)return;const a=V.getElapsedTime(),e=A.value+N.value;H.length=e,y.length=e,F.length=e,j.length=e;let n=0;for(let d=0;d<A.value;d++)y[n]||(y[n]=new ne),(c=y[n])==null||c.set(Math.random()*2-1,Math.random()*2-1,Math.random()*2-1).normalize(),F[n]=ie.randFloat(T.value,R.value),j[n]="tt",H[n]=a,n++;for(let d=0;d<N.value;d++)y[n]||(y[n]=new ne),(i=y[n])==null||i.set(Math.random()*2-1,Math.random()*2-1,Math.random()*2-1).normalize(),F[n]=ie.randFloat(E.value,P.value),j[n]="th",H[n]=a,n++;l.reset()}function oe(a){if(!V)return;a.reset();const e=V.getElapsedTime(),n=new ne(.5,.5,.5),c=A.value+N.value;for(let i=0;i<c;i++){if(H[i]===void 0||e<H[i]||F[i]===void 0)continue;let b=F[i]/a.scale.x;if(b<=.001)continue;const o=y[i],q=j[i];if(!o||!q)continue;let J,D,W;q==="tt"?(J=S.value,D=M.value,W=B.value):(J=k.value,D=C.value,W=Q.value);for(let Y=0;Y<=me;Y++){const ee=Y/me,le=Math.pow(ee,W),f=ie.lerp(J,D,le),ae=o.clone().multiplyScalar(b*ee).add(n);a.addBall(ae.x,ae.y,ae.z,f,tn)}}a.update()}function he(){if(!u)return;console.log("開始匯出設定...");const a=y.map(i=>i?{x:i.x,y:i.y,z:i.z}:null),e={x:u.position.x,y:u.position.y,z:u.position.z},n={x:u.quaternion.x,y:u.quaternion.y,z:u.quaternion.z,w:u.quaternion.w},c={ttStartStrength:S.value,ttEndStrength:M.value,ttMinWorldLength:T.value,ttMaxWorldLength:R.value,ttShrinkPower:B.value,ttNumLines:A.value,thStartStrength:k.value,thEndStrength:C.value,thMinWorldLength:E.value,thMaxWorldLength:P.value,thShrinkPower:Q.value,thNumLines:N.value,resolution:I.value,lineTypes:j,randomDirections:a,currentTargetLengths:F,cameraPosition:e,cameraQuaternion:n};try{const i=JSON.stringify(c,null,2),d=new Blob([i],{type:"application/json"}),b=URL.createObjectURL(d),o=document.createElement("a");o.href=b,o.download="metaball_config.json",document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(b),console.log("設定已匯出為 metaball_config.json")}catch(i){console.error("匯出設定失敗:",i),alert("匯出設定失敗！")}}function ye(){var a;(a=X.value)==null||a.click()}function be(a){var c,i;console.log("開始匯入設定...");const e=(i=(c=a.target)==null?void 0:c.files)==null?void 0:i[0];if(!e){console.log("未選擇檔案。");return}const n=new FileReader;n.onload=function(d){var b;try{const o=JSON.parse((b=d.target)==null?void 0:b.result);if(console.log("讀取的設定:",o),!o||typeof o!="object")throw new Error("無效的設定檔格式");const q=["ttStartStrength","thStartStrength","resolution","lineTypes","randomDirections","currentTargetLengths","cameraPosition","cameraQuaternion"];for(const D of q)if(!(D in o))throw new Error(`缺少必要欄位: ${D}`);if(!("ttNumLines"in o)||!("thNumLines"in o))throw new Error("缺少必要欄位: ttNumLines or thNumLines");const J=o.ttNumLines+o.thNumLines;if(!Array.isArray(o.lineTypes)||o.lineTypes.length!==J||!Array.isArray(o.randomDirections)||o.randomDirections.length!==J||!Array.isArray(o.currentTargetLengths)||o.currentTargetLengths.length!==J)throw new Error("線條數據數量與線條總數不符");if(S.value=o.ttStartStrength,M.value=o.ttEndStrength,T.value=o.ttMinWorldLength,R.value=o.ttMaxWorldLength,B.value=o.ttShrinkPower,A.value=o.ttNumLines,k.value=o.thStartStrength,C.value=o.thEndStrength,E.value=o.thMinWorldLength,P.value=o.thMaxWorldLength,Q.value=o.thShrinkPower,N.value=o.thNumLines,I.value=o.resolution,l&&(l.material=p[U.value],ue()),l&&r&&u&&m&&o.cameraQuaternion){console.log("開始匯入並應用模型變換..."),u.position.set(0,0,30),u.up.set(0,1,0),u.quaternion.set(0,0,0,1),u.lookAt(0,0,0),m.target.set(0,0,0);const D=m.autoRotate;m.update(),m.autoRotate=D,u.updateMatrixWorld(!0),r.remove(l),l=new pe(I.value,p[U.value],!0,!0,1e5),l.isolation=I.value*1.5,l.scale.set(8,8,8),l.position.set(0,0,0),l.quaternion.set(0,0,0,1),l.enableUvs=!1,l.enableColors=!1,r.add(l),console.log("  - 模型已用標準參數重新創建");const W=o.ttNumLines+o.thNumLines;H=new Array(W),y=new Array(W),F=new Array(W),j=new Array(W);const Y=(V==null?void 0:V.getElapsedTime())??0;for(let f=0;f<W;f++)j[f]=o.lineTypes[f],F[f]=o.currentTargetLengths[f],o.randomDirections[f]?y[f]=new ne(o.randomDirections[f].x,o.randomDirections[f].y,o.randomDirections[f].z):y[f]=null,H[f]=Y-1e3;console.log("  - 線條數據已從JSON精確設置"),l.reset(),oe(l),console.log("  - 模型已使用JSON中的線條數據計算完成");const ee=new Xe(o.cameraQuaternion.x??o.cameraQuaternion._x,o.cameraQuaternion.y??o.cameraQuaternion._y,o.cameraQuaternion.z??o.cameraQuaternion._z,o.cameraQuaternion.w??o.cameraQuaternion._w);l.quaternion.set(0,0,0,1);const le=ee.clone().invert();l.quaternion.premultiply(le),l.matrixWorldNeedsUpdate=!0,l.updateMatrixWorld(!0),console.log("  - 模型旋轉已應用"),l.matrixAutoUpdate=!1,console.log("匯入完成！從初始相機位置看的效果應與匯出時完全相同")}console.log("設定已成功匯入。"),alert("設定已載入！")}catch(o){console.error("匯入設定失敗:",o),alert(`匯入設定失敗！錯誤: ${o.message}`)}finally{X.value&&(X.value.value="")}},n.onerror=function(d){console.error("讀取檔案錯誤:",d),alert("讀取檔案時發生錯誤。"),X.value&&(X.value.value="")},n.readAsText(e)}function xe(){if(!l||!u)return;console.log("開始匯出 GLB (應用視角)...");const a=I.value,e=l.quaternion.clone(),n=l.isolation,c=new Ye;try{console.log(`  - 使用目前解析度: ${a}`),l.init(a),l.isolation=n,console.log(`  - 設置相同的isolation值: ${n}`),console.log("  - 重新計算模型..."),oe(l),console.log("  - 模型計算完成."),console.log("  - 應用反向攝影機旋轉...");const i=u.quaternion.clone().invert();l.quaternion.premultiply(i),l.updateMatrixWorld(!0),console.log("  - 反向旋轉已應用."),c.parse(l,d=>{if(d instanceof ArrayBuffer)try{const b=new Blob([d],{type:"model/gltf-binary"}),o=URL.createObjectURL(b),q=document.createElement("a");q.href=o,q.download=`metaball_model_view_res${a}.glb`,document.body.appendChild(q),q.click(),document.body.removeChild(q),URL.revokeObjectURL(o),console.log(`GLB 檔案已匯出: metaball_model_view_res${a}.glb`),alert(`模型 (含視角, res ${a}) GLB 已下載！`)}catch(b){console.error("建立或下載 GLB Blob 時出錯:",b),alert("下載 GLB 時發生錯誤！")}else console.error("匯出結果不是預期的 ArrayBuffer:",d),alert("匯出 GLB 失敗：格式錯誤。請檢查控制台。");console.log("  - (成功) 恢復原始模型旋轉..."),l.quaternion.copy(e),l.updateMatrixWorld(!0),console.log("  - 模型旋轉已恢復.")},d=>{console.error("匯出 GLB 時發生錯誤:",d),alert("匯出 GLB 時發生錯誤！請檢查控制台。"),console.log("  - (錯誤) 恢復原始模型旋轉..."),l.quaternion.copy(e),l.updateMatrixWorld(!0),console.log("  - 模型旋轉已恢復.")},{binary:!0})}catch(i){console.error("準備匯出或應用旋轉時出錯:",i),alert("準備匯出模型時發生錯誤！"),console.log("  - (Catch) 恢復原始模型旋轉..."),l.quaternion.copy(e),l.updateMatrixWorld(!0),console.log("  - 模型旋轉已恢復.")}}function we(){!l||!r||(U.value==="shader"?(U.value="liquid",r.background instanceof te&&r.background.set(1118481)):(U.value="shader",r.background instanceof te&&r.background.set(16777215)),l.material=p[U.value],console.log(`材質已切換為: ${U.value}, 背景顏色已更新.`))}function _e(){!l||!r||(G.value=!G.value,console.log(`像素化狀態已切換為: ${G.value}`))}function Le(){m&&(O.value=!O.value,m.autoRotate=O.value,m.autoRotateSpeed=2,console.log(`自動旋轉狀態已切換為: ${O.value}`))}function Se(){S.value<M.value&&(M.value=S.value)}function Me(){M.value>S.value&&(S.value=M.value)}function Te(){T.value>R.value&&(R.value=T.value)}function Re(){R.value<T.value&&(T.value=R.value)}function ke(){k.value>C.value&&(C.value=k.value)}function Ce(){C.value<k.value&&(k.value=C.value)}function Ee(){E.value>P.value&&(P.value=E.value)}function Pe(){P.value<E.value&&(E.value=P.value)}function ue(){if(l){const a=I.value*1.5;l.init(I.value),l.isolation=a,console.log(`Marching Cubes params updated: resolution=${I.value}, derivedIsolation=${a}`)}}Ie(I,ue);function de(){if(re=requestAnimationFrame(de),!(!l||!p||!u||!g||!r||!m)){if(oe(l),m.update(),U.value==="shader"&&!G.value){const a=V.getElapsedTime();p.shader.uniforms.uTime.value=a,p.shader.uniforms.viewVector.value=u.position}G.value&&$?$.render():g.render(r,u)}}function ce(){var n,c;if(!u||!g||!p)return;const a=((n=z.value)==null?void 0:n.clientWidth)??window.innerWidth,e=((c=z.value)==null?void 0:c.clientHeight)??window.innerHeight;u.aspect=a/e,u.updateProjectionMatrix(),g.setSize(a,e),$&&$.setSize(a,e),p.shader&&p.shader.uniforms.uResolution.value.set(a,e)}return Ue(()=>{if(!z.value){console.error("Canvas container not found!");return}const a=z.value,e=a.clientWidth,n=a.clientHeight;r=new Ve,r.background=new te(16777215),u=new We(45,e/n,.1,1e3),u.position.set(0,0,30),u.lookAt(r.position),g=new Fe({antialias:!0}),g.setSize(e,n),g.setPixelRatio(Math.min(window.devicePixelRatio,1.5)),a.appendChild(g.domElement),m=new De(u,g.domElement),m.enableDamping=!0,m.autoRotate=O.value,m.autoRotateSpeed=2,r.add(new ze(16777215,.3));const c=new Be(16777215,.5);c.position.set(5,10,7.5),r.add(c),K=new Qe(g),K.compileEquirectangularShader(),p=ge();const i=I.value*1.5;l=new pe(I.value,p[U.value],!0,!0,1e5),l.isolation=i,l.scale.set(8,8,8),l.enableUvs=!1,l.enableColors=!1,r.add(l),$=new Ze(g),se=new et(10,r,u),$.addPass(se);const d=new tt;$.addPass(d),V=new Ke,fe(),Z(),de(),window.addEventListener("resize",ce)}),qe(()=>{var a,e;cancelAnimationFrame(re),window.removeEventListener("resize",ce),m&&m.dispose(),g&&g.dispose(),p&&((a=p.shader)==null||a.dispose(),(e=p.liquid)==null||e.dispose(),r!=null&&r.environment&&r.environment.dispose()),l&&(r==null||r.remove(l)),r&&r.traverse(n=>{var c;if(n instanceof Ge){(c=n.geometry)==null||c.dispose();const i=n.material;Array.isArray(i)?i.forEach(d=>d.dispose()):i&&i.dispose()}}),K&&K.dispose(),z.value&&g&&z.value.removeChild(g.domElement),console.log("Three.js scene cleaned up.")}),(a,e)=>(Ne(),Ae("div",nt,[t("div",{ref_key:"canvasContainer",ref:z,class:"canvas-container"},null,512),t("div",ot,[e[18]||(e[18]=t("div",{class:"panel-title"},"由粗到細 線條控制",-1)),t("div",lt,[t("label",at,[e[12]||(e[12]=w("最粗粗度 (強度): ")),t("span",it,h(s(S).toFixed(2)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[0]||(e[0]=n=>L(S)?S.value=n:null),min:"0",max:"0.1",step:"0.01",onInput:Se},null,544),[[_,s(S),void 0,{number:!0}]])]),t("div",st,[t("label",rt,[e[13]||(e[13]=w("最細粗度 (強度): ")),t("span",ut,h(s(M).toFixed(2)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[1]||(e[1]=n=>L(M)?M.value=n:null),min:"0.0",max:"0.1",step:"0.01",onInput:Me},null,544),[[_,s(M),void 0,{number:!0}]])]),t("div",dt,[t("label",ct,[e[14]||(e[14]=w("最短長度: ")),t("span",pt,h(s(T).toFixed(1)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[2]||(e[2]=n=>L(T)?T.value=n:null),min:"0.5",max:"5.0",step:"0.1",onInput:Te},null,544),[[_,s(T),void 0,{number:!0}]])]),t("div",vt,[t("label",mt,[e[15]||(e[15]=w("最長長度: ")),t("span",gt,h(s(R).toFixed(1)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[3]||(e[3]=n=>L(R)?R.value=n:null),min:"0.5",max:"5.0",step:"0.1",onInput:Re},null,544),[[_,s(R),void 0,{number:!0}]])]),t("div",ft,[t("label",ht,[e[16]||(e[16]=w("收縮速率 (冪): ")),t("span",yt,h(s(B).toFixed(2)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[4]||(e[4]=n=>L(B)?B.value=n:null),min:"0.1",max:"5.0",step:"0.05"},null,512),[[_,s(B),void 0,{number:!0}]])]),t("div",bt,[t("label",xt,[e[17]||(e[17]=w("線條數量: ")),t("span",wt,h(s(A)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[5]||(e[5]=n=>L(A)?A.value=n:null),min:"0",max:"10",step:"1",onInput:Z},null,544),[[_,s(A),void 0,{number:!0}]])])]),t("div",_t,[e[25]||(e[25]=t("div",{class:"panel-title"},"由細到粗 線條控制",-1)),t("div",Lt,[t("label",St,[e[19]||(e[19]=w("最細粗度 (強度): ")),t("span",Mt,h(s(k).toFixed(2)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[6]||(e[6]=n=>L(k)?k.value=n:null),min:"0.0",max:"0.1",step:"0.01",onInput:ke},null,544),[[_,s(k),void 0,{number:!0}]])]),t("div",Tt,[t("label",Rt,[e[20]||(e[20]=w("最粗粗度 (強度): ")),t("span",kt,h(s(C).toFixed(2)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[7]||(e[7]=n=>L(C)?C.value=n:null),min:"0",max:"0.1",step:"0.01",onInput:Ce},null,544),[[_,s(C),void 0,{number:!0}]])]),t("div",Ct,[t("label",Et,[e[21]||(e[21]=w("最短長度: ")),t("span",Pt,h(s(E).toFixed(1)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[8]||(e[8]=n=>L(E)?E.value=n:null),min:"0.5",max:"5.0",step:"0.1",onInput:Ee},null,544),[[_,s(E),void 0,{number:!0}]])]),t("div",It,[t("label",Ut,[e[22]||(e[22]=w("最長長度: ")),t("span",qt,h(s(P).toFixed(1)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[9]||(e[9]=n=>L(P)?P.value=n:null),min:"0.5",max:"5.0",step:"0.1",onInput:Pe},null,544),[[_,s(P),void 0,{number:!0}]])]),t("div",At,[t("label",Nt,[e[23]||(e[23]=w("膨脹速率 (冪): ")),t("span",Vt,h(s(Q).toFixed(2)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[10]||(e[10]=n=>L(Q)?Q.value=n:null),min:"0.1",max:"5.0",step:"0.05"},null,512),[[_,s(Q),void 0,{number:!0}]])]),t("div",Wt,[t("label",Ft,[e[24]||(e[24]=w("線條數量: ")),t("span",Dt,h(s(N)),1)]),x(t("input",{type:"range","onUpdate:modelValue":e[11]||(e[11]=n=>L(N)?N.value=n:null),min:"0",max:"10",step:"1",onInput:Z},null,544),[[_,s(N),void 0,{number:!0}]])])]),t("div",zt,[e[26]||(e[26]=t("div",{class:"panel-title"},"通用控制",-1)),t("button",{onClick:Z},"重新生成所有線條"),t("button",{onClick:he,style:{"margin-top":"5px"}},"匯出設定 (JSON)"),t("button",{onClick:ye,style:{"margin-top":"5px"}},"匯入設定 (JSON)"),t("input",{type:"file",ref_key:"importConfigFileRef",ref:X,onChange:be,accept:".json",style:{display:"none"}},null,544),t("button",{onClick:xe,style:{"margin-top":"5px"}},"下載目前模型 (GLB)")]),t("div",Bt,[e[30]||(e[30]=t("div",{class:"panel-title"},"快速切換",-1)),t("div",Qt,[t("label",Gt,h(s(U)==="shader"?"描邊材質":"液體材質"),1),t("label",Ot,[t("input",{type:"checkbox",checked:s(U)==="liquid",onChange:we},null,40,$t),e[27]||(e[27]=t("span",{class:"slider round"},null,-1))])]),t("div",Ht,[t("label",jt,h(s(G)?"像素化":"正常"),1),t("label",Jt,[t("input",{type:"checkbox",checked:s(G),onChange:_e},null,40,Xt),e[28]||(e[28]=t("span",{class:"slider round"},null,-1))])]),t("div",Kt,[t("label",Yt,h(s(O)?"自動旋轉中":"靜止"),1),t("label",Zt,[t("input",{type:"checkbox",checked:s(O),onChange:Le},null,40,en),e[29]||(e[29]=t("span",{class:"slider round"},null,-1))])])])]))}};export{cn as default};
